name: Release server

on:
  push:
    branches:
      - main
    paths:
      - "server/**"

permissions:
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            code-target: linux-x64-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            code-target: linux-arm64-musl
          - os: macos-14
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-14
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Install aarch64 gnu cross linker
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install cross (musl targets)
        if: contains(matrix.target, 'musl')
        uses: taiki-e/install-action@f63c33fd96cc1e69a29bafd06541cf28588b43a4 # v2.58.21
        with:
          tool: cross

      - name: Set jemalloc page size for linux-arm64
        if: matrix.code-target == 'linux-arm64'
        run: |
          echo "JEMALLOC_SYS_WITH_LG_PAGE=16" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          if [[ "${{ matrix.target }}" == *musl* ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          RUSTFLAGS: "-C strip=symbols -C codegen-units=1"
        working-directory: server

      - name: Copy CLI binary
        run: |
          mkdir dist
          cp server/target/${{ matrix.target }}/release/footloose2-server dist/

      - name: Upload CLI artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.code-target }}
          path: dist/footloose2-server
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Download CLI artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: dist

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - name: Generate npm packages
        run: node ci/publish.js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
